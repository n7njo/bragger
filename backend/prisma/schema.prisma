generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           String        @id @default(cuid())
  email        String        @unique
  name         String
  password     String
  createdAt    DateTime      @default(now())
  updatedAt    DateTime      @default(now()) @updatedAt
  achievements Achievement[]
  milestones   Milestone[]

  @@map("users")
}

model Category {
  id           String        @id @default(cuid())
  name         String        @unique
  color        String?
  createdAt    DateTime      @default(now())
  achievements Achievement[]

  @@map("categories")
}

model Tag {
  id           String           @id @default(cuid())
  name         String           @unique
  createdAt    DateTime         @default(now())
  achievements AchievementTag[]

  @@map("tags")
}

model Achievement {
  id            String             @id @default(cuid())
  title         String
  description   String
  startDate     DateTime
  endDate       DateTime?
  durationHours Int?
  categoryId    String
  impact        String?
  skillsUsed    String[]

  createdAt     DateTime           @default(now())
  updatedAt     DateTime           @updatedAt
  status        Status             @default(IDEA)
  githubUrl     String?
  userId        String
  user          User               @relation(fields: [userId], references: [id])
  category      Category           @relation(fields: [categoryId], references: [id])
  tags          AchievementTag[]
  images        AchievementImage[]
  milestones    Milestone[]

  @@map("achievements")
}

model AchievementTag {
  achievementId String
  tagId         String
  achievement   Achievement @relation(fields: [achievementId], references: [id], onDelete: Cascade)
  tag           Tag         @relation(fields: [tagId], references: [id], onDelete: Cascade)

  @@id([achievementId, tagId])
  @@map("achievement_tags")
}

model AchievementImage {
  id            String      @id @default(cuid())
  achievementId String
  filename      String
  originalName  String
  filePath      String
  fileSize      Int
  mimeType      String
  createdAt     DateTime    @default(now())
  achievement   Achievement @relation(fields: [achievementId], references: [id], onDelete: Cascade)

  @@map("achievement_images")
}

model Milestone {
  id            String      @id @default(cuid())
  achievementId String
  userId        String
  title         String
  description   String?
  completedAt   DateTime?
  dueDate       DateTime?
  order         Int         @default(0)
  createdAt     DateTime    @default(now())
  updatedAt     DateTime    @default(now()) @updatedAt
  achievement   Achievement @relation(fields: [achievementId], references: [id], onDelete: Cascade)
  user          User        @relation(fields: [userId], references: [id])

  @@map("milestones")
}

enum Status {
  IDEA
  CONCEPT
  USABLE
  COMPLETE
}
